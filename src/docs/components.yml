components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        firstname: Le
        lastname: Kiet
        dateofbirth: 10-02-2001
        gender: true
        phonenumber: '0347057544'
        email: tkiet.le.1002@gmail.com
        username: tkiet.le.1002
        password: tkiet.le.1002

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Product:
      type: object
      properties:
        Id:
          type: string
        BrandId:
          type: string
        CategoryId:
          type: string
        CategoryGroupId:
          type: string
        Name:
          type: string
        Description:
          type: string
        Price:
          type: string
        Rate:
          type: number
        Quantity:
          type: number
        Status:
          type: tring
          enum: [Init, Verify, Shipping, Done]
      example:
        Id: 00000000-0000-0000-0000-000000000000
        BrandId: 00000000-0000-0000-0000-000000000000
        CategoryId: 00000000-0000-0000-0000-000000000000
        CategoryGroupId: 00000000-0000-0000-0000-000000000000
        Name: Demo
        Description: Demo
        Price: 10.5
        Rate: 4.3
        Quantity: 10
        Status: true
  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
